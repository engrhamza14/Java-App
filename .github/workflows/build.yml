name: Build and Pull Artifact from Artifactory

on:
  workflow_call:
    inputs:
      jfrog-url:
        required: true
        type: string
      jfrog-user:
        required: true
        type: string
      jfrog-apikey:
        required: true
        type: string

jobs:
  build:
    name: Build and Pull Artifact
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK 11
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      # Step 3: Cache Maven dependencies
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      # Step 4: Build with Maven
      - name: Build with Maven
        run: mvn clean install package

      # Step 5: Verify Build Output
      - name: Verify Build Output
        run: |
          echo "Verifying that the JAR file was created..."
          ls -l target/*.jar || (echo "No JAR file found!" && exit 1)

      # Step 6: Set up JFrog CLI
      - name: Set up JFrog CLI
        run: |
          curl -fL https://getcli.jfrog.io | sh
          sudo mv jfrog /usr/local/bin

      # Step 7: Configure JFrog CLI
      - name: Configure JFrog CLI
        run: |
          jfrog config add my-server \
            --artifactory-url=${{ inputs.jfrog-url }} \
            --user=${{ inputs.jfrog-user }} \
            --apikey=${{ inputs.jfrog-apikey }} \
            --interactive=false

      # Step 8: Verify JFrog CLI Configuration
      - name: Verify JFrog CLI Configuration
        run: |
          jfrog config show

      # Step 9: Pull the artifact from Artifactory
      - name: Pull Artifact from Artifactory
        run: |
          jfrog rt download "my-repo/libs-release-local/*.jar" ./downloaded-artifacts/ \
            --server-id=my-server

      # Step 10: Verify Pulled Artifacts
      - name: Verify Pulled Artifacts
        run: |
          echo "Verifying that the JAR file was downloaded..."
          ls -l ./downloaded-artifacts/*.jar || (echo "No JAR file found!" && exit 1)

